{"version":3,"sources":["pages/NotFound.js","components/comments/Comments.module.css","components/comments/NewCommentForm.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/HighlightedQuote.module.css","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuotaDetail.js"],"names":["NotFound","className","module","exports","NewCommentForm","props","commentTextRef","useRef","useHttp","addComment","sendRequest","status","error","onAddedComment","useEffect","submitFormHandler","event","preventDefault","enteredText","current","value","commentData","text","quoteId","classes","form","onSubmit","LoadingSpinner","control","htmlFor","id","rows","ref","actions","CommentItem","item","CommentsList","comments","map","comment","Comments","useState","isAddingComment","setIsAddingComment","useParams","getAllComments","loadedComments","data","addedCommentHandler","useCallback","length","onClick","HighlightedQuote","quote","author","QuotaDetail","params","match","useRouteMatch","quotedId","getSingleQuote","loadedQuote","path","exact","to","url"],"mappings":"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","file":"static/js/4.8f440479.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction NotFound() {\r\n    return (\r\n        <div className='centered'>\r\n            <p>Page Not Found!  ü§∑‚Äç‚ôÇÔ∏è</p>    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__1TZwS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__1UV8i\",\"loading\":\"NewCommentForm_loading__2v-Ww\",\"control\":\"NewCommentForm_control__1Gd5f\",\"actions\":\"NewCommentForm_actions__g_Dpj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__1Oji_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__1t0iM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__1fW1n\"};","import { useRef, useEffect } from 'react';\n\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const { onAddedComment } = props;\n\n  useEffect(() => {\n    if (status === 'completed' && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    const enteredText = commentTextRef.current.value;\n\n    // optional: Could validate here\n\n    sendRequest({ commentData: { text: enteredText }, quoteId: props.quoteId });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === 'pending' && (\n        <div className='centered'>\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;","import { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from './CommentsList';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n\n  const { quoteId } = params;\n\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  let comments;\n\n  if (status === 'pending') {\n    comments = (\n      <div className='centered'>\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === 'completed' && loadedComments && loadedComments.length > 0) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n\n  if (\n    status === 'completed' &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = <p className='centered'>No comments were added yet!</p>;\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={quoteId}\n          onAddedComment={addedCommentHandler}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import React,{useEffect} from 'react'\r\nimport {Route, useParams , Link , useRouteMatch} from 'react-router-dom'\r\nimport Comment from '../components/comments/Comments'\r\nimport HighlightedQuote from '../components/quotes/HighlightedQuote'\r\nimport NotFound from './NotFound'\r\nimport useHttp from '../hooks/use-http'\r\nimport {getSingleQuote} from '../lib/api'\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner'\r\n\r\nconst Dummy_DATA =[\r\n    { id: 'q1' , author:'Ahmed', text:'Learn react js is too much funn!'},\r\n    { id: 'q2' , author:'Alrashed', text:'Learn node  and Laravel for back end!'}\r\n]\r\nfunction QuotaDetail() {\r\n    const params = useParams()\r\n    const match = useRouteMatch()\r\n\r\n    const {quotedId} = params;\r\n    // console.log(params);\r\n    //  console.log('Quote Id :', quotedId);\r\n    const { sendRequest, status, data: loadedQuote , error } = useHttp(getSingleQuote , true)\r\n    useEffect(()=>{\r\n        sendRequest(quotedId)\r\n       \r\n    },[sendRequest, quotedId])\r\n\r\n    if (status === 'pending') {\r\n        return (\r\n          <div className='centered'>\r\n            <LoadingSpinner />\r\n          </div>\r\n        );\r\n      }\r\n    \r\n      if (error) {\r\n        return <p className='centered focused'>{error}</p>;\r\n      }\r\n\r\n    if(!loadedQuote.text){\r\n       return <p> No quote Found!! ü§∑‚Äç‚ôÇÔ∏èü§∑‚Äç‚ôÇÔ∏è </p>\r\n    }\r\n    return (\r\n        <div>\r\n            <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author}/>\r\n            <Route path={`${match.path}`} exact>\r\n                <div className='centered'>\r\n                    <Link className='btn--flat' to={`${match.url}/comments`}>\r\n                        Load Comments\r\n                    </Link>\r\n                </div>                \r\n            </Route>\r\n\r\n            <Route path={`${match.path}/comments`}>\r\n                <Comment />\r\n            </Route>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuotaDetail\r\n"],"sourceRoot":""}